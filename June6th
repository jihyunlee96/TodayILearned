[Heap Sort Implementation]
Reference: Fundamentals of Data Structures in C, 2nd Edition, Horowitz

void adjust (element a[], int root, int n)
{
  int child, rootkey;
  element temp;
  
  rootkey = a[root].key;
  child = 2 * root;
  
  while (child >= n) {
    if((child < n) && (a[child].key < a[child + 1].key))
      child ++;
     if (rootkey > a[child].key) break;
     else {
      a[child/2] = a[child];
      child *= 2;
     }
  }
  a[child/2] = temp;
}

void heapSort (element a[], int n)
{
  int i, j;
  element temp;
  
  for (i = n/2; i > 0; i --)
    adjust(a, i, n);
   
  for (i = n-1; i > 0; i --) {
    swap(a[1], a[i+1], temp);
    adjust(a, 1, i);
  }
}
